/*what is Promise and how it is wroks*/
let promice = new Promise(function myFun(resolve, reject) {
    alert("hello");
    resolve(56);
})
console.log("hello one");
setTimeout(() => {
    console.log("hello world");
}, 1000);

console.log("my name is mou mandal");
console.log(promice);


/*how to works catch() and then() on Promise*/
let p = new Promise((resolve, reject) => {
    console.log("I am pending");
    setTimeout(() => {
        console.log("I am promise and i am fulfilled");
        resolve(true);
    }, 1000);
})
let p1 = new Promise((resolve, reject) => {
    console.log("I am pending");
    setTimeout(() => {
        console.log("I am promise and i am rejected");
        reject(new Error("i am a error"));
    }, 1000);
})
console.log(p, p1);
p.then((value) => {
    console.log(value);
})
/* p1.then((value) => {
   console.log(value);
 }, (error) => {
     console.log(error);
 })
 */
p1.catch((error) => {
    console.log(error);
    })


/*Promise is always works parallel*/
let p1 = new Promise((resolve, reject) => {
    setTimeout(() => {
        console.log("Resolved after 2 seconds");
        resolve(56);
    }, 1000);
})
p1.then((value) => {
    console.log(value);
    let p2= new Promise((resolve, reject) => {
        setTimeout(() => {
           resolve("promise 2")
        }, 1000);
    })
    return p2;
}).then((value) => {
    console.log("we are done");
    return 2;
}).then((value) => {
    console.log("now we are pakka done");
})
console.log(p1);



/*loadScript*/
const loadScript = (src) => {
    return new Promise((resolve, reject) => {
        let script = document.createElement("script");
        script.type = "text/javascript";
        script.src = src;
        document.body.appendChild(script)
        script.onload = (script) => {
            resolve("Script has been loaded ");
        }
        script.onerror = () => {
            reject(0)
        }
    })
}
let p1 = loadScript("https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
p1.then((value) => {
    console.log(value)
    return loadScript("https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js");
}).then((value) => {
    console.log("second script is ready");
}).catch((error) => {
    console.log("we are sorry but we are having problem for load this script");
})


